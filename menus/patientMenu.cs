using healthclinic.models;
using healthclinic.Repositories;
using healthclinic.utils;

namespace healthclinic.menus
{
    public static class PatientMenu
    {
        private static readonly PatientRepository _patientRepo = new();

        public static void Show()
        {
            while (true)
            {
                Console.Clear();
                Console.WriteLine("===  MEN√ö PACIENTES ===");
                Console.WriteLine("1Ô∏è‚É£ Registrar paciente");
                Console.WriteLine("2Ô∏è‚É£ Listar pacientes");
                Console.WriteLine("3Ô∏è‚É£ Buscar paciente por ID");
                Console.WriteLine("4Ô∏è‚É£ Actualizar paciente");
                Console.WriteLine("5Ô∏è‚É£ Eliminar paciente");
                Console.WriteLine("0Ô∏è‚É£ Volver al men√∫ principal");
                Console.Write("\nSelecciona una opci√≥n: ");
                var option = Console.ReadLine();

                switch (option)
                {
                    case "1": AddPatient(); break;
                    case "2": ListPatients(); break;
                    case "3": GetPatientById(); break;
                    case "4": UpdatePatient(); break;
                    case "5": DeletePatient(); break;
                    case "0": return;
                    default: Console.WriteLine("‚ö†Ô∏è Opci√≥n no v√°lida."); break;
                }

                Console.WriteLine("\nPresiona cualquier tecla para continuar...");
                Console.ReadKey();
            }
        }

        private static void AddPatient()
        {
            var name = ConsoleHelper.ReadNonEmptyString("Nombre: ");
            var age = ConsoleHelper.Readbyte("Edad: ");
            var email = ConsoleHelper.ReadNonEmptyString("Email: ");
            var phone = ConsoleHelper.ReadNonEmptyString("Tel√©fono: ");
            var gender = ConsoleHelper.ReadNonEmptyString("G√©nero: ");

            var patient = new Patient { Name = name, Age = age, Email = email, Phone = phone, Gender = gender };
            _patientRepo.Add(patient);

            Console.WriteLine("‚úÖ Paciente registrado correctamente.");
        }

        private static void ListPatients()
        {
            if(_patientRepo.GetAll().Count == 0){ return; }
            Console.WriteLine("\nüìã Lista de pacientes:");
            foreach (var p in _patientRepo.GetAll())
                Console.WriteLine($"üßç {p.Id} | {p.Name} | {p.Email} | {p.Gender}");
        }

        private static void GetPatientById()
        {
            if (_patientRepo.GetAll().Count == 0) { return; }
            ListPatients();
            var id = ConsoleHelper.ReadGuid("Ingrese el ID del paciente: ");
            var p = _patientRepo.GetById(id);
            if (p != null)
                Console.WriteLine($"‚úÖ Encontrado: {p.Name} ({p.Email})");
            else
                Console.WriteLine("‚ùå Paciente no encontrado.");
        }

        private static void UpdatePatient()
        {
            if (_patientRepo.GetAll().Count == 0) { return; }
            ListPatients();
            var id = ConsoleHelper.ReadGuid("ID del paciente a actualizar: ");
            var p = _patientRepo.GetById(id);
            if (p == null)
            {
                Console.WriteLine("‚ùå No se encontr√≥ el paciente.");
                return;
            }

            var name = ConsoleHelper.ReadNonEmptyString("Nuevo nombre: ");
            var email = ConsoleHelper.ReadNonEmptyString("Nuevo email: ");
            var phone = ConsoleHelper.ReadNonEmptyString("Nuevo tel√©fono: ");

            p.Name = name;
            p.Email = email;
            p.Phone = phone;

            _patientRepo.Update(p);
            Console.WriteLine("‚úÖ Paciente actualizado correctamente.");
        }

        private static void DeletePatient()
        {
            if(_patientRepo.GetAll().Count == 0){ return; }
            ListPatients();
            var id = ConsoleHelper.ReadGuid("ID del paciente a eliminar: ");
            _patientRepo.Delete(id);
            Console.WriteLine("üóëÔ∏è Paciente eliminado correctamente.");
        }
    }
}